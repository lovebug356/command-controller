// Generated by CoffeeScript 1.4.0
var cc, should;

should = require('should');

cc = require('../');

describe('CommandController', function() {
  it('should find the first command that is ready', function(done) {
    var cco, d1, d2, d3;
    d1 = new cc.BaseCommand();
    d2 = new cc.BaseCommand();
    d3 = new cc.BaseCommand();
    cco = new cc.CommandController();
    cco.addCommand(d1);
    cco.addCommand(d2);
    cco.addCommand(d3);
    d1.isReady = function(done) {
      return done(false);
    };
    return cco.firstReady(function(first) {
      first.should.equal(d2);
      return done();
    });
  });
  it('should find the first command that is ready and skip done commands', function(done) {
    var cco, d1, d2;
    d1 = new cc.BaseCommand();
    d2 = new cc.BaseCommand();
    cco = new cc.CommandController();
    cco.addCommand(d1);
    cco.addCommand(d2);
    d1.done = true;
    return cco.firstReady(function(first) {
      first.should.equal(d2);
      return done();
    });
  });
  it('should run all commands', function(done) {
    var cco, d1, d2;
    d1 = new cc.BaseCommand();
    d2 = new cc.BaseCommand();
    cco = new cc.CommandController();
    cco.addCommand(d1);
    cco.addCommand(d2);
    return cco.run(function() {
      d1.done.should.be.ok;
      d2.done.should.be.ok;
      return done();
    });
  });
  return it('should limit the amount of simultanious commands', function(done) {
    var cco, d1, d2;
    d1 = new cc.ShellCommand("ls");
    d2 = new cc.ShellCommand("ls");
    cco = new cc.CommandController(1);
    cco.addCommand(d1);
    cco.addCommand(d2);
    cco.running.oldPush = cco.running.push;
    cco.running.push = function(item) {
      this.length.should.not.be.above(1.);
      return this.oldPush(item);
    };
    return cco.run(function() {
      d1.done.should.be.ok;
      d2.done.should.be.ok;
      return done();
    });
  });
});

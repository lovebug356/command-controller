// Generated by CoffeeScript 1.4.0
var Copy, Delete, Move, ShellCommand, Zip, path,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

ShellCommand = require('./shellcommand');

path = require('path');

Copy = (function(_super) {

  __extends(Copy, _super);

  function Copy(srcFile, dstFolder) {
    this.srcFile = srcFile;
    this.dstFolder = dstFolder;
    this.resolveSrcFile(this.srcFile);
    Copy.__super__.constructor.call(this, "Copy " + this.srcFile);
    this.cmd = "cp " + this.srcFile + " " + this.dstFolder;
  }

  return Copy;

})(ShellCommand);

Delete = (function(_super) {

  __extends(Delete, _super);

  function Delete(srcFile) {
    this.srcFile = srcFile;
    this.resolveSrcFile(this.srcFile);
    Delete.__super__.constructor.call(this, "Delete " + this.srcFile);
    this.cmd = "rm " + this.srcFile;
  }

  Delete.prototype.getDstFile = function() {
    return void 0;
  };

  return Delete;

})(ShellCommand);

Move = (function(_super) {

  __extends(Move, _super);

  function Move(srcFile, dstFolder) {
    this.srcFile = srcFile;
    this.dstFolder = dstFolder;
    this.resolveSrcFile(this.srcFile);
    Move.__super__.constructor.call(this, "Move " + this.srcFile + " to " + this.dstFolder);
    this.cmd = "mv " + this.srcFile + " " + this.dstFolder;
  }

  Move.prototype.getDstFile = function() {
    return path.join(this.dstFolder, path.basename(this.srcFile));
  };

  return Move;

})(ShellCommand);

Zip = (function(_super) {

  __extends(Zip, _super);

  function Zip(srcFile) {
    var cmd;
    this.srcFile = srcFile;
    this.resolveSrcFile(this.srcFile);
    if (this.isZipFile()) {
      cmd = "gunzip";
    } else {
      cmd = "gzip";
    }
    Zip.__super__.constructor.call(this, "" + cmd + " " + this.srcFile, path.dirname(this.srcFile));
    this.cmd = "" + cmd + " " + (path.basename(this.srcFile));
  }

  Zip.prototype.isZipFile = function() {
    return this.srcFile.match(/\.gz$/);
  };

  Zip.prototype.getDstFile = function() {
    if (this.isZipFile()) {
      return this.srcFile.replace(/\.gz$/, '');
    } else {
      return this.srcFile + '.gz';
    }
  };

  return Zip;

})(ShellCommand);

module.exports.Copy = Copy;

module.exports.Move = Move;

module.exports.Delete = Delete;

module.exports.Zip = Zip;

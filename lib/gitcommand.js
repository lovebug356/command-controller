// Generated by CoffeeScript 1.4.0
var GitFetchCommand, ShellCommand, cp, exec, fs,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

cp = require('child_process');

exec = cp.exec;

fs = require('fs');

ShellCommand = require('./shellcommand');

GitFetchCommand = (function(_super) {

  __extends(GitFetchCommand, _super);

  function GitFetchCommand(uri, module, branch) {
    this.uri = uri;
    this.module = module;
    this.branch = branch;
    GitFetchCommand.__super__.constructor.call(this, this.uri);
    this.name = "git " + this.module;
  }

  GitFetchCommand.prototype.preRun = function(done) {
    var _this = this;
    return fs.exists(this.module, function(exists) {
      if (exists) {
        _this.cmd = "git remote update";
        _this.folder = _this.module;
      } else {
        _this.cmd = "git clone " + _this.uri + " " + _this.module;
        _this.folder = void 0;
      }
      if (_this.branch) {
        _this.cmd += " && git checkout origin/" + _this.branch;
      }
      return done(true);
    });
  };

  return GitFetchCommand;

})(ShellCommand);

module.exports = GitFetchCommand;

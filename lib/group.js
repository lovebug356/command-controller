// Generated by CoffeeScript 1.4.0
var BaseCommand, Group,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BaseCommand = require('./basecommand');

Group = (function(_super) {

  __extends(Group, _super);

  function Group(name, cco) {
    this.name = name;
    this.cco = cco != null ? cco : void 0;
    Group.__super__.constructor.call(this, this.name);
  }

  Group.prototype.add = function(child) {
    this.addDependency(child);
    if (this.cco) {
      return this.cco.addCommand(child);
    }
  };

  return Group;

})(BaseCommand);

module.exports = Group;
